//Code generated by ChatGPT


using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;
using System;

public class TaskItem
{
    [BsonId]
    public ObjectId Id { get; set; }

    [BsonElement("title")]
    public string? Title { get; set; }

    [BsonElement("description")]
    [BsonIgnoreIfNull]
    public string? Description { get; set; }

    [BsonElement("dueDate")]
    public DateTime? DueDate { get; set; }

    [BsonElement("completed")]
    public bool Completed { get; set; }

    [BsonElement("labels")]
    [BsonIgnoreIfNull]
    public string[]? Labels { get; set; }

    [BsonElement("priority")]
    [BsonIgnoreIfNull]
    public string? Priority { get; set; }

    [BsonElement("assignee")]
    [BsonIgnoreIfNull]
    public ObjectId Assignee { get; set; }

    [BsonElement("createdAt")]
    public DateTime CreatedAt { get; set; }

    [BsonElement("createdBy")]
    [BsonIgnoreIfNull]
    public ObjectId CreatedBy { get; set; }
}












// using MongoDB.Bson;
// using MongoDB.Bson.Serialization.Attributes;
// using System.Text.Json.Serialization;

// namespace WorkTracker.Models;

// public class TaskItem 
// {
//     [BsonId]
//     [BsonRepresentation(BsonType.ObjectId)]
//     public string? Id { get; set; }
//     [BsonElement("Name")]
//     [JsonPropertyName("Name")]
//     public string? TaskName {get; set;}
//     public string? Description {get;set;}
//     public bool isComplete {get;set;}
//     public string? Secret {get;set;}
// }



// public class TaskItemDTO
// {
//     public long Id { get; set;}
//     public string? Name {get; set;}
//     public string? Description {get;set;}
//     public bool isComplete {get;set;}
// }